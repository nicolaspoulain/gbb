%Dossier : jeu de dominos
%Nicolas Poulain

%!postproc(md):  \\\[(.*?)\\\]   $$\1$$
% txt2tags-svn -t md dominos.t2t && pandoc --toc --number-sections --listings --smart --include-in-header=include.tex -s dominos.md -o dominos.tex && pdflatex dominos.tex && evince dominos.pdf

=Règles du jeu de dominos=

Le jeu de dominos est un jeu de société d'origine chinoise,
utilisant 28 pièces (dans le cas d'un jeu "double-six"), les
dominos. On peut adopter une des règles suivantes :

**Règle 1**
  - Étaler les dominos sur la table, points cachés.
    Distribuer 10 dominos à chaque joueur.
  - Celui qui a le double le plus fort commence et pose celui-ci,
    son voisin pose à l'une des extrémités (les bouts) un domino dont l'une des
    parties a le même nombre de points.
  - Chaque joueur joue à son tour et l'on constitue ainsi une chaîne
    dont les parties voisines ont le même nombre de points.
  - Le joueur qui ne peut pas jouer passe son tour, et on continue à
    jouer jusqu'à ce qu'un des joueurs se soit débarrassé de tous ses dominos,
    ou que le jeu soit complètement bloqué.
  - À la fin du jeu, celui qui totalise le moins de points (la somme des points de l’ensemble des dominos) est le gagnant.
    On a donc tout intérêt à se débarrasser en premier des dominos valant beaucoup de points.


**Règle 2**
  - Étaler les dominos sur la table, points cachés.
    Distribuer le même nombre de dominos à chaque joueur,
    en laissant un talon de quelques pièces.
  - Le premier joueur pose son plus fort domino, son voisin pose à l'une
    des extrémités un domino dont l'une des parties a le même nombre de points.
  - Chaque joueur joue à son tour et l'on constitue ainsi une chaîne dont
    les parties voisines ont le même nombre de points.
  - Lorsqu'un joueur n'a pas de domino qui convienne, il pioche en prenant
    une pièce du talon et passe son tour, c'est le suivant qui joue.
  - Le vainqueur est celui qui a placé le premier tous ses dominos.


\includegraphics[scale=0.7]{dominosuite.png}

=Modélisation=

représenté par un vecteur colonne
$\left(\begin{array}{c}x \\  y \end{array}\right)$ ou par un nombre $10x+y$
Ainsi le jeu d'un joueur peut être représenté par la matrice (le tableau)

$J=\left(
\begin{array}{ccccccc}
 6 & 5 & 5 & 3 & 3 & 3 & 1 \\
 1 & 4 & 0 & 3 & 1 & 0 & 1 \\
\end{array}
\right)$ ou $J=(61,54,50,33,31,30,11)$.

La partie la plus intéressante du programme est l'élaboration de
la stratégie de l'ordinateur.

==Premières fonctions==

On commencera par écrire les fonctions:

+ Écrire la fonction ```creation_jeu``` capable de donner
 l'ensemble des dominos de la boîte de jeu.
\[\left(\begin{array}{cccccccccccccccccccccccccccc} 6 & 6 & 6 & 6 & 6 & 6 & 6 & 5 & 5 & 5 & 5 & 5 & 5 & 4 & 4 & 4 & 4 & 4 & 3 & 3 & 3 & 3 & 2 & 2 & 2 & 1 & 1 & 0 \\ 6 & 5 & 4 & 3 & 2 & 1 & 0 & 5 & 4 & 3 & 2 & 1 & 0 & 4 & 3 & 2 & 1 & 0 & 3 & 2 & 1 & 0 & 2 & 1 & 0 & 1 & 0 & 0 \\ \end{array}\right)\]
+ Écrire une fonction ```distribue``` qui tire au hasard (et sans remise) une main
 contenant un nombre donné de dominos.
+ Écrire une fonction ```est_avant``` qui admet comme paramètres d'entrée deux dominos
 et qui renvoie ```True``` ou ```False``` selon que les deux dominos sont ou pas classés
 dans l’ordre décroissant.
 Par exemple ```est_avant([6,2],[5,0])``` renverrait ```True```.
+ Écrire une fonction ```tri_decr``` qui trie un ensemble de dominos par ordre
 décroissant.
+ Écrire une fonction ```doubles``` qui renvoie en sortie l’ensemble des doubles
 d’une main ainsi que leur indice dans la main.
 Dans l'exemple du début, la fonction ```doubles``` renverrait en sortie
 $\left(\begin{array}{cc}
 3 & 1 \\
 3 & 1 \\
 4 & 7 \\
 \end{array}\right)$
 car le double 3 apparaît en 4-ème position dans la main et le double as en 7-ème.
+ Écrire une fonction ```histogramme``` qui calcule le nombre de fois où apparaît
 chacune des valeurs 0,1\dots dans un jeu.
 Dans notre exemple $H=[2,4,0,4,1,2,1]$.
+ Écrire une fonction ```max_presence``` qui renseigne sur le (ou les) nombre qui   
 apparaît le plus souvent dans un jeu.
 Dans notre exemple ```maxpresence``` renverrait $[1,3]$.
+ ```possibilites``` qui à partir d'une main donnée et des deux "bouts" se trouvant sur
 le tapis, donne les choix possibles du joueur.
 Dans notre exemple , ```possibilites(J,5,0)``` donnerait
 $\left(
 \begin{array}{ccc}
 5 & 5 & 3  \\
 4 & 0 &  0  \\
 2 & 3 &  6  \\
\end{array}\right)$


==Programme Python==

~~~~
%!include: ``dominos.py``
~~~~


voir http://code.google.com/p/npoulain pour le code 

